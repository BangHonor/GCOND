Namespace(gpu_id=1, dataset='ogbn-products', dis_metric='ours', epochs=2000, nlayers=2, hidden=256, lr_adj=0.01, lr_feat=0.01, lr_model=0.01, weight_decay=0.0, dropout=0.5, normalize_features=True, keep_ratio=1.0, reduction_rate=0.005, seed=1, alpha=0, debug=0, sgc=1, inner=10, outer=20, save=1, model='DeepGCN', deep_layers=28, deep_hidden=128, mlp_layers=1, block='res+', conv='gen', gcn_aggr='softmax_sg', t=0.1, p=1.0, y=0.0, learn_t=False, learn_p=False, learn_y=False, norm='batch', msg_norm=True, learn_msg_scale=True, model_save_path='model_ckpt', model_load_path='ogbn_products_pretrained_model.pth')
WARNING:root:The OGB package is out of date. Your version is 1.3.4, while the latest version is 1.3.5.
pyg_data: Data(num_nodes=2449029, x=[2449029, 100], y=[2449029, 1], adj_t=[2449029, 2449029, nnz=123718280])
split_index: {'train': tensor([     0,      1,      2,  ..., 196612, 196613, 196614]), 'valid': tensor([196615, 196616, 196617,  ..., 235935, 235936, 235937]), 'test': tensor([ 235938,  235939,  235940,  ..., 2449026, 2449027, 2449028])}
train val test的长度: 196615 39323 2213091
size of adj_train: (196615, 196615)
edges in adj_train: 10903246.0
adj_syn: (987, 987) feat_syn: torch.Size([987, 100])
开始图凝聚！
Epoch 100, 梯度匹配loss_avg: 3.5115029192985374
The number of layers 28 Aggregation method softmax_sg block: res+
LN/BN->ReLU->GraphConv->Res
/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch/utils/checkpoint.py:25: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
Traceback (most recent call last):
  File "/home/xzb/GCond/train_gcond_transduct.py", line 105, in <module>
    agent.train()
  File "/home/xzb/GCond/gcond_agent_transduct.py", line 211, in train
    res.append(self.test_with_val(data.feat_full, adj, best_acc))
  File "/home/xzb/GCond/gcond_agent_transduct.py", line 247, in test_with_val
    output = model.predict(data.feat_full, data.adj_full)
  File "/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/xzb/GCond/models/deepgcn.py", line 351, in predict
    return self.forward(features, adj_full)
  File "/home/xzb/GCond/models/deepgcn.py", line 106, in forward
    h = self.gcns[0](h, edge_index)
  File "/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/xzb/GCond/models/gcn_lib/sparse/torch_vertex.py", line 68, in forward
    m = self.propagate(edge_index, x=x, edge_attr=edge_emb)
  File "/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py", line 366, in propagate
    coll_dict = self.__collect__(self.__user_args__, edge_index,
  File "/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py", line 260, in __collect__
    data = self.__lift__(data, edge_index, dim)
  File "/home/xzb/anaconda3/envs/gd/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py", line 230, in __lift__
    return src.index_select(self.node_dim, index)
RuntimeError: CUDA out of memory. Tried to allocate 60.16 GiB (GPU 1; 44.56 GiB total capacity; 11.01 GiB already allocated; 26.37 GiB free; 12.96 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
